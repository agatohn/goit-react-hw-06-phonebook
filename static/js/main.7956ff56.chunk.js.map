{"version":3,"sources":["Components/filter/Filter.module.css","Redux/phonebook/phonebook-actions.js","Redux/phonebook/phoneboock-selectors.js","Components/contactForm/ContactForm.js","Components/filter/Filter.js","Components/contactList/ContactList.js","Components/App.js","Redux/phonebook/phonebook-reducer.js","Redux/store.js","index.js","Components/contactForm/ContactForm.module.css","Components/contactList/ContactList.module.css"],"names":["module","exports","addContact","createAction","input","payload","id","uuidv4","name","number","getContacts","deleteContact","changeFilter","state","phonebook","contacts","getFilter","filter","ContactForm","useState","setName","setNumber","useSelector","dispatch","useDispatch","handleContactData","e","target","value","onSubmit","newContact","preventDefault","some","contact","toLocaleLowerCase","alert","phonebookActions","className","styles","form","formLabel","formInput","type","pattern","title","required","onChange","formBtn","Filter","inputValue","filterLabel","filterInput","ContactList","filteredContacts","toLowerCase","includes","contactList","map","contactListItem","contactsName","contactsBtn","onClick","App","createReducer","actions","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","phonebookPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","phonebookReducer","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,YAAc,4BAA4B,YAAc,8B,0HCGpEC,EAAaC,YAAa,iBAAiB,SAACC,GAAD,MAAY,CAC3DC,QAAS,CACPC,GAAIC,cACJC,KAAMJ,EAAMI,KACZC,OAAQL,EAAMK,YAGZC,EAAcP,YAAa,iBAKlB,GAAED,aAAYS,cAJPR,YAAa,oBAISS,aAHvBT,YAAa,0BAGwBO,eChB7CA,EAAc,SAACG,GAAD,OAAWA,EAAMC,UAAUC,UACzCC,EAAY,SAACH,GAAD,OAAWA,EAAMC,UAAUG,Q,OCMrC,SAASC,IACtB,MAAwBC,mBAAS,IAAjC,mBAAOX,EAAP,KAAaY,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAOV,EAAP,KAAeY,EAAf,KACMN,EAAWO,YAAYZ,GACvBa,EAAWC,cAEXC,EAAoB,SAACC,GACzB,MAAwBA,EAAEC,OAAlBnB,EAAR,EAAQA,KAAMoB,EAAd,EAAcA,MACd,OAAQpB,GACN,IAAK,OACHY,EAAQQ,GACR,MAEF,IAAK,SACHP,EAAUO,GACV,MAEF,QACE,SAyBN,OACE,uBAAMC,SARa,SAACH,GAdG,IAACI,EAexBJ,EAAEK,iBAfsBD,EAgBP,CAAEtB,OAAMC,UAfzBM,EAASiB,MACP,SAACC,GAAD,OACEA,EAAQzB,KAAK0B,sBACXJ,EAAWtB,KAAK0B,qBAClBnB,EAASiB,MAAK,SAACC,GAAD,OAAaA,EAAQxB,SAAWqB,EAAWrB,aAEzD0B,MAAM,UAAD,OACOL,EAAWtB,KADlB,sBACoCsB,EAAWrB,OAD/C,qBAGLc,EAASa,EAAiBlC,WAAW4B,IAOzCV,EAAQ,IACRC,EAAU,KAIoBgB,UAAWC,IAAOC,KAAhD,UACE,wBAAOF,UAAWC,IAAOE,UAAzB,iBAEE,uBACEH,UAAWC,IAAOG,UAClBb,MAAOpB,EACPkC,KAAK,OACLlC,KAAK,OACLmC,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,SAAUrB,OAId,wBAAOY,UAAWC,IAAOE,UAAzB,mBAEE,uBACEH,UAAWC,IAAOG,UAClBb,MAAOnB,EACPiC,KAAK,MACLlC,KAAK,SACLmC,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRC,SAAUrB,OAId,wBAAQiB,KAAK,SAASL,UAAWC,IAAOS,QAAxC,4B,qBCzES,SAASC,IACtB,IAAMC,EAAa3B,YAAYN,GACzBO,EAAWC,cACjB,OACE,mCACE,wBAAOa,UAAWC,IAAOY,YAAzB,kCAEE,uBACEb,UAAWC,IAAOa,YAClBT,KAAK,OACLd,MAAOqB,EACPH,SAAU,SAACpB,GAAD,OACRH,EAASa,EAAiBxB,aAAac,EAAEC,OAAOC,gB,oBCT7C,SAASwB,IACtB,IAAMrC,EAAWO,YAAYZ,GACvBO,EAASK,YAAYN,GACrBO,EAAWC,cAEX6B,EAAmBtC,EAASE,QAAO,qBAAGT,KACrC8C,cAAcC,SAAStC,EAAOqC,kBAGrC,OACE,oBAAIjB,UAAWC,IAAOkB,YAAtB,SACGH,EAAiBI,KAAI,gBAAGnD,EAAH,EAAGA,GAAIE,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACpB,qBAAa4B,UAAWC,IAAOoB,gBAA/B,UACE,oBAAGrB,UAAWC,IAAOqB,aAArB,UACGnD,EADH,KACWC,KAGX,wBACE4B,UAAWC,IAAOsB,YAClBlB,KAAK,SACLmB,QAAS,kBAAMtC,EAASa,EAAiBzB,cAAcL,KAHzD,sBALOA,QCfF,SAASwD,IAMtB,OACE,gCACE,2CACA,cAAC5C,EAAD,IAEA,0CACA,cAAC8B,EAAD,IACA,cAACI,EAAD,O,4BCfArC,EAAWgD,YAAc,IAAD,mBAC3BC,EAAQ9D,YAAa,SAACW,EAAD,GAAyB,IAAfR,EAAc,EAAdA,QAG9B,MAFc,sBAAOQ,GAAP,CAAcR,OAFF,cAM3B2D,EAAQrD,eAAgB,SAACE,EAAD,GAAyB,IAAfR,EAAc,EAAdA,QAC3BU,EAAWF,EAAMI,QAAO,qBAAGX,KAAgBD,KAEjD,OAAO,YAAIU,MATe,IAiBxBE,EAAS8C,YAAc,GAAD,eACzBC,EAAQpD,cAAe,SAACqD,EAAD,YAAM5D,YAGjB6D,cAAgB,CAC7BnD,WACAE,W,wBCZIkD,EAAU,YACXC,YAAqB,CACtBC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,SAS1DC,EAAyB,CAC7BC,IAAK,YACLC,YACAC,UAAW,CAAC,WAGDC,EAAQC,YAAe,CAClCC,QAAS,CACPrE,UAAWsE,YAAeP,EAAwBQ,IAEpDlB,eAGWmB,EAAYC,YAAaN,G,QClCtCO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUT,MAAOA,EAAjB,SACE,cAAC,IAAD,CAAaU,QAAS,KAAML,UAAWA,EAAvC,SACE,cAACxB,EAAD,UAIN8B,SAASC,eAAe,U,kBCd1B7F,EAAOC,QAAU,CAAC,KAAO,0BAA0B,UAAY,+BAA+B,UAAY,+BAA+B,QAAU,+B,kBCAnJD,EAAOC,QAAU,CAAC,YAAc,iCAAiC,gBAAkB,qCAAqC,aAAe,kCAAkC,YAAc,oC","file":"static/js/main.7956ff56.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"Filter_filterLabel__3G6Hf\",\"filterInput\":\"Filter_filterInput__25S91\"};","// import types from \"./phonebook-types\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst addContact = createAction(\"phonebook/add\", (input) => ({\r\n  payload: {\r\n    id: uuidv4(),\r\n    name: input.name,\r\n    number: input.number,\r\n  },\r\n}));\r\nconst getContacts = createAction(\"phonebook/get\");\r\nconst deleteContact = createAction(\"phonebook/delete\");\r\nconst changeFilter = createAction(\"phonebook/changeFilter\");\r\n\r\n/* eslint import/no-anonymous-default-export: [2, {\"allowObject\": true}] */\r\nexport default { addContact, deleteContact, changeFilter, getContacts };\r\n","export const getContacts = (state) => state.phonebook.contacts;\r\nexport const getFilter = (state) => state.phonebook.filter;\r\n","import React, { useState } from \"react\";\r\n// import PropTypes from \"prop-types\";\r\nimport styles from \"./ContactForm.module.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport phonebookActions from \"../../Redux/phonebook/phonebook-actions\";\r\nimport { getContacts } from \"../../Redux/phonebook/phoneboock-selectors\";\r\n\r\nexport default function ContactForm() {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n  const contacts = useSelector(getContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleContactData = (e) => {\r\n    const { name, value } = e.target;\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const checkExistAndAdd = (newContact) => {\r\n    contacts.some(\r\n      (contact) =>\r\n        contact.name.toLocaleLowerCase() ===\r\n          newContact.name.toLocaleLowerCase() ||\r\n        contacts.some((contact) => contact.number === newContact.number)\r\n    )\r\n      ? alert(\r\n          `Friend ${newContact.name} or number ${newContact.number} is alredy exist`\r\n        )\r\n      : dispatch(phonebookActions.addContact(newContact));\r\n    // handleAdd(newContact);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    checkExistAndAdd({ name, number });\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={styles.form}>\r\n      <label className={styles.formLabel}>\r\n        Name\r\n        <input\r\n          className={styles.formInput}\r\n          value={name}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={handleContactData}\r\n        />\r\n      </label>\r\n\r\n      <label className={styles.formLabel}>\r\n        Number\r\n        <input\r\n          className={styles.formInput}\r\n          value={number}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          onChange={handleContactData}\r\n        />\r\n      </label>\r\n\r\n      <button type=\"submit\" className={styles.formBtn}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\n// const mapStateToProps = (state) => ({\r\n//   contacts: state.phonebook.contacts,\r\n// });\r\n\r\n// const mapDispatchToProps = (dispatch) => ({\r\n//   handleAdd: (contact) => dispatch(phonebookActions.addContact(contact)),\r\n// });\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n\r\n// ContactForm.propTypes = {\r\n//   checkExist: PropTypes.func.isRequired,\r\n// };\r\n","import React from \"react\";\r\n// import PropTypes from \"prop-types\";\r\nimport styles from \"./Filter.module.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport phonebookActions from \"../../Redux/phonebook/phonebook-actions\";\r\nimport { getFilter } from \"../../Redux/phonebook/phoneboock-selectors\";\r\n\r\nexport default function Filter() {\r\n  const inputValue = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <>\r\n      <label className={styles.filterLabel}>\r\n        Find contacts by name\r\n        <input\r\n          className={styles.filterInput}\r\n          type=\"text\"\r\n          value={inputValue}\r\n          onChange={(e) =>\r\n            dispatch(phonebookActions.changeFilter(e.target.value))\r\n          }\r\n        />\r\n      </label>\r\n    </>\r\n  );\r\n}\r\n\r\n// const mapStateToProps = (state) => ({\r\n//   inputValue: state.phonebook.filter,\r\n// });\r\n\r\n// const mapDispatchToProps = (dispatch) => ({\r\n//   handleFilter: (e) => dispatch(phonebookActions.changeFilter(e.target.value)),\r\n// });\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n\r\n// Filter.propTypes = {\r\n//   inputValue: PropTypes.string.isRequired,\r\n//   handleFilter: PropTypes.func.isRequired,\r\n// };\r\n","import React from \"react\";\r\n// import PropTypes from \"prop-types\";\r\nimport styles from \"./ContactList.module.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport phonebookActions from \"../../Redux/phonebook/phonebook-actions\";\r\nimport {\r\n  getContacts,\r\n  getFilter,\r\n} from \"../../Redux/phonebook/phoneboock-selectors\";\r\n\r\nexport default function ContactList() {\r\n  const contacts = useSelector(getContacts);\r\n  const filter = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  const filteredContacts = contacts.filter(({ name }) =>\r\n    name.toLowerCase().includes(filter.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <ul className={styles.contactList}>\r\n      {filteredContacts.map(({ id, name, number }) => (\r\n        <li key={id} className={styles.contactListItem}>\r\n          <p className={styles.contactsName}>\r\n            {name}: {number}\r\n          </p>\r\n\r\n          <button\r\n            className={styles.contactsBtn}\r\n            type=\"button\"\r\n            onClick={() => dispatch(phonebookActions.deleteContact(id))}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\n// const mapStateToProps = (state) => ({\r\n//   contacts: state.phonebook.contacts,\r\n//   filter: state.phonebook.filter,\r\n// });\r\n\r\n// const mapDispatchToProps = (dispatch) => ({\r\n//   handleDelete: (id) => dispatch(phonebookActions.deleteContact(id)),\r\n// });\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n\r\n// ContactList.propTypes = {\r\n//   contacts: PropTypes.array.isRequired,\r\n//   handleDelete: PropTypes.func.isRequired,\r\n// };\r\n","import React from \"react\";\r\nimport ContactForm from \"./contactForm/ContactForm\";\r\nimport Filter from \"./filter/Filter\";\r\nimport ContactList from \"./contactList/ContactList\";\r\n// import { useDispatch } from \"react-redux\";\r\n// import phonebookActions from \"../Redux/phonebook/phonebook-actions\";\r\n\r\nexport default function App() {\r\n  // const dispatch = useDispatch();\r\n  // useEffect(() => {\r\n  //   dispatch(phonebookActions.getContacts());\r\n  // }, [dispatch]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm />\r\n\r\n      <h2>Contacts</h2>\r\n      <Filter />\r\n      <ContactList />\r\n    </div>\r\n  );\r\n}\r\n\r\n// const mapDispatchToProps = (dispatch) => ({\r\n//   getContacts: () => dispatch(phonebookActions.getContacts()),\r\n// });\r\n\r\n// export default connect(null, mapDispatchToProps)(App);\r\n","import { combineReducers } from \"redux\";\r\n// import types from \"./phonebook-types\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport actions from \"./phonebook-actions\";\r\n\r\nconst contacts = createReducer([], {\r\n  [actions.addContact]: (state, { payload }) => {\r\n    const contacts = [...state, payload];\r\n    // localStorage.setItem(\"contacts\", JSON.stringify(contacts));\r\n    return contacts;\r\n  },\r\n  [actions.deleteContact]: (state, { payload }) => {\r\n    const contacts = state.filter(({ id }) => id !== payload);\r\n    // localStorage.setItem(\"contacts\", JSON.stringify([...contacts]));\r\n    return [...contacts];\r\n  },\r\n\r\n  // [actions.getContacts]: () => {\r\n  //   const contacts = JSON.parse(localStorage.getItem(\"contacts\"));\r\n  //   return [...contacts];\r\n  // },\r\n});\r\nconst filter = createReducer(\"\", {\r\n  [actions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts,\r\n  filter,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\n// import { combineReducers } from \"redux\";\r\n\r\nimport phonebookReducer from \"./phonebook/phonebook-reducer\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\n// const rootReducer = combineReducers({\r\n//   phonebook: phonebookReducer,\r\n// });\r\n// const persistedReducer = persistReducer(phonebookPersistConfig, rootReducer);\r\nconst phonebookPersistConfig = {\r\n  key: \"phonebook\",\r\n  storage,\r\n  blacklist: [\"filter\"],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    phonebook: persistReducer(phonebookPersistConfig, phonebookReducer),\r\n  },\r\n  middleware,\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/App\";\nimport { Provider } from \"react-redux\";\nimport { store, persistor } from \"./Redux/store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2r0Qf\",\"formLabel\":\"ContactForm_formLabel__EWXHU\",\"formInput\":\"ContactForm_formInput__1Z1RX\",\"formBtn\":\"ContactForm_formBtn__1wTHj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__11azh\",\"contactListItem\":\"ContactList_contactListItem__2Tg30\",\"contactsName\":\"ContactList_contactsName__2Bj5_\",\"contactsBtn\":\"ContactList_contactsBtn__6t4Nv\"};"],"sourceRoot":""}